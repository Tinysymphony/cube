#!/usr/bin/env node
'use strict';
const fs = require('xfs');
const path = require('path');
const cmd = require('commander');

function filePath(file) {
  var base = getCwd();
  return path.join(base, file);
}
function checkFile(file) {
  return fs.existsSync(filePath(file));
}
function sourcePath(file) {
  var base = __dirname;
  return path.join(base, '../', file);
}
function getCwd() {
  return process.cwd();
}
function optmizeInfo() {
  console.log('[INFO] you can custom cube.min.js file, i.e : css_runtime');
}

cmd.option('--jade', 'with jade runtime')
  .option('-f, --force', 'force update cube.min.js')
  .parse(process.argv);


var option = cmd;
/**
if (!checkFile('./cube.min.js') || option.force) {
  var codeCube = fs.readFileSync(sourcePath('./runtime/cube.min.js')).toString();
  fs.sync().save(filePath('./cube.min.js'), codeCube);
} else {
  console.log('file already exist: ./cube.min.js');
}
**/

if (!checkFile('./start.html')) {
  fs.sync().save(filePath('./start.html'), fs.readFileSync(sourcePath('./runtime/start.html')));
  console.log('inited start.html');
} else {
  console.log('file already exist: ./start.html');
}
if (!checkFile('./package.json')) {
  fs.sync().save(filePath('./package.json'), fs.readFileSync(sourcePath('./runtime/cube.json')));
  console.log('inited package.json');
} else {
  console.log('file already exist: ./package.json');
}
if (!checkFile('./main.js')) {
  fs.sync().save(filePath('./main.js'),
    'document.getElementById("msg").innerHTML = "hello, Cube";\n' +
    'document.getElementById("show").value = document.getElementById("initscript").innerHTML;\n' +
    'exports.run = function () {console.log("app started!")};'
  );
  console.log('inited main.js');
} else {
  console.log('file already exist: ./main.js');
}
fs.sync().mkdir('test');
console.log('successfully inited');
